plugins {
    id 'java'
    id 'groovy'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

defaultTasks 'assemble', 'publishToMavenLocal', 'shadowJar', 'test'

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

dependencies {
    implementation ('org.hibernate:hibernate-core:5.6.15.Final') {
        transitive = false
    }
    //explicit the Hibernate dependencies we need:
    implementation 'antlr:antlr:2.7.7'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'javax.transaction:javax.transaction-api:1.3'
    implementation 'net.bytebuddy:byte-buddy:1.14.5'
    implementation 'org.jboss.logging:jboss-logging:3.5.0.Final'

    testRuntimeOnly ('io.quarkus:quarkus-hibernate-orm-panache:3.1.0.Final') {
        transitive = false
    }
    testRuntimeOnly ('io.quarkus:quarkus-panache-common:3.1.0.Final') {
        transitive = false
    }

    implementation 'org.apache.groovy:groovy:4.0.12'

    implementation 'org.eclipse.jdt:ecj:3.33.0'

//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testImplementation 'junit:junit:4.13.2'

    implementation 'javax.xml.bind:jaxb-api:2.3.1'
}

group = 'org.hibernate'
version = '2.0-SNAPSHOT'
description = 'query-validator'
sourceCompatibility = '8'

sourceSets {
    main {
        groovy {
            srcDirs = ['src/main/java']
        }
    }
}

shadowJar {
    dependencies {
        exclude(dependency('org.eclipse.jdt:ecj'))
//        exclude "tools.jar"
    }
    relocate ('org.hibernate', 'org.hibernate.query.validator.hibernate') {
        exclude 'org.hibernate.query.validator.*'
    }
    relocate 'org.jboss', 'org.hibernate.query.validator'
    relocate 'javax.persistence', 'org.hibernate.query.validator.jpa'
    relocate 'javax.transaction', 'org.hibernate.query.validator.jta'
    relocate 'net', 'org.hibernate.query.validator'
    relocate 'antlr', 'org.hibernate.query.validator.antlr'
    relocate 'org.apache.groovy', 'org.hibernate.query.validator.groovy.apache'
    relocate ('org.codehaus.groovy', 'org.hibernate.query.validator.groovy.codehaus') {
        exclude 'org.codehaus.groovy.runtime.*'
        exclude 'org.codehaus.groovy.runtime.callsite.*'
    }
    relocate ('groovy', 'org.hibernate.query.validator.groovy.groovy') {
        exclude 'groovy.lang.*'
    }
    relocate 'groovyjarjarantlr', 'org.hibernate.query.validator.groovy.antlr'
    relocate 'groovyjarjarasm', 'org.hibernate.query.validator.asm'
    relocate 'groovyjarjarcommonscli', 'org.hibernate.query.validator.cli'
    relocate 'groovyjarjarpicocli', 'org.hibernate.query.validator.picocli'
    archiveClassifier.set('all')
}

jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
}

test {
    dependsOn 'copyDependencies'
    systemProperty 'gradle', 'true'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task copyDependencies(type: Copy) {
    from configurations.testRuntimeClasspath
    into 'test-runtime-libs'
}

